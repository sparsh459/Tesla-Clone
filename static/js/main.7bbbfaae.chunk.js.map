{"version":3,"sources":["logo.svg","features/car/carSlice.js","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","carSlice","createSlice","name","initialState","cars","reducers","selectCars","state","car","Header","useState","burgerStatus","setburgerStatus","useSelector","Container","href","src","alt","map","index","key","RightMenu","CustomMenu","onClick","BurgerNav","show","CloseWrapper","CustomClose","styled","div","Menu","MenuIcon","CloseIcon","props","Section","title","description","backgroundimage","leftButton","rightButton","Wrap","bgImage","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","DownArrow","img","Home","App","className","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7bbbfaae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.be622899.svg\";","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    cars : [\"Model S\", \"Model Y\", \"Model 3\", \"Model X\"]\r\n}\r\n\r\nconst carSlice = createSlice({\r\n    name: \"car\",\r\n    initialState,\r\n    reducers: {}\r\n})\r\n\r\n\r\nexport const selectCars = state => state.car.cars\r\n\r\nexport default carSlice.reducer\r\n\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { selectCars } from '../features/car/carSlice';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Header() {\r\n    const [burgerStatus, setburgerStatus] = useState(false);\r\n    const cars = useSelector(selectCars)\r\n    return (\r\n        <Container>\r\n            <a href=\"/\">\r\n                <img src=\"/images/logo.svg\" alt=\"\" />\r\n            </a>\r\n            <Menu>\r\n                {cars && cars.map((car, index)=>(\r\n                    <a key={index} href=\"#\">{car}</a>\r\n                ))}\r\n            </Menu>\r\n            <RightMenu>\r\n                <a href=\"#\">Shop</a>\r\n                <a href=\"#\">Account</a>\r\n                <CustomMenu onClick={()=>setburgerStatus(true)}/>\r\n            </RightMenu>\r\n            <BurgerNav show={burgerStatus}>\r\n                <CloseWrapper>\r\n                    <CustomClose onClick={()=>setburgerStatus(false)}/>\r\n                </CloseWrapper>\r\n                {cars && cars.map((car, index)=>(\r\n                    <li key={index}><a href=\"#\">{car}</a></li>\r\n                ))}\r\n                <li><a href=\"#\">Existing Inventory</a></li>\r\n                <li><a href=\"#\">Used Inventory</a></li>\r\n                <li><a href=\"#\">Trade-in</a></li>\r\n                <li><a href=\"#\">Test-Drive</a></li>\r\n                <li><a href=\"#\">CyberTruck</a></li>\r\n                <li><a href=\"#\">Roadster</a></li>\r\n                {/* <li><a href=\"#\">Semi</a></li> */}\r\n                {/* <li><a href=\"#\">Charging</a></li> */}\r\n                {/* <li><a href=\"#\">PowerWall</a></li>\r\n                <li><a href=\"#\">Commercial Energy</a></li> */}\r\n                {/* <li><a href=\"#\">Utilities</a></li>\r\n                <li><a href=\"#\">Find Us</a></li>\r\n                <li><a href=\"#\">Support</a></li>\r\n                <li><a href=\"#\">Investor Relation</a></li> */}\r\n            </BurgerNav>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\nconst Container = styled.div`\r\n    min-height:60px;\r\n    position: fixed;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 20px;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n`\r\n\r\nconst Menu = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex: 1;\r\n    font-size: 20px;\r\n    a{\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n        padding: 0 60px;\r\n        flex-wrap: nowrap;\r\n    }\r\n    @media(max-width: 786px){\r\n        display: none;\r\n    }\r\n`\r\n\r\nconst RightMenu = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 20px;\r\n    a{\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n        margin-right: 10px;\r\n    }\r\n`\r\n\r\nconst CustomMenu = styled(MenuIcon)`\r\n    cursor: pointer;\r\n`\r\n\r\nconst CustomClose = styled(CloseIcon)`\r\n    cursor: pointer;\r\n`\r\n\r\nconst BurgerNav = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    background-color: white;\r\n    width: 300px;\r\n    z-index: 16;\r\n    list-style: none;\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: start;\r\n    transform: ${props => props.show ? 'translateX(0)' : 'translateX(100%)'};\r\n    transition: transform 0.2s;\r\n    li{\r\n        padding: 15px 0;\r\n        border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n\r\n        a{\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`\r\n\r\nconst CloseWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nfunction Section({title, description, backgroundimage, leftButton, rightButton}) {\r\n    return (\r\n        <Wrap bgImage={backgroundimage}>\r\n            <ItemText>\r\n            <h1>{title}</h1>\r\n            <p>{description}</p>\r\n            </ItemText>\r\n            <Buttons>\r\n                {/* we need to wrap buttons together so buttongroup */}\r\n                <ButtonGroup>\r\n                    <LeftButton>\r\n                        {leftButton}\r\n                    </LeftButton>\r\n                    {/* if right button exist then only shoe it otherwise hide it */}\r\n                    {rightButton && \r\n                    <RightButton>\r\n                        {rightButton}\r\n                    </RightButton>\r\n                    }\r\n                </ButtonGroup>\r\n                <DownArrow src=\"/images/down-arrow.svg\" />\r\n            </Buttons>\r\n        </Wrap>\r\n    )\r\n}\r\n\r\nexport default Section\r\n\r\nconst Wrap = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-size: cover;\r\n    background-position: center;\r\n    backgrouund-repeat: no-repeat;\r\n    background-image: url('/images/model-s.jpg');\r\n    // to make the buttons and text model in column \r\n    display: flex;\r\n    flex-direction: column;\r\n    // after flex direction is done column justify and align functionality flips and justify is used for verticle alignment and align item is used for horizontal alignment\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background-image: ${props => `url(\"/images/${props.bgImage}\")`}\r\n`\r\n\r\nconst ItemText = styled.div`\r\n    padding-top: 15vh;\r\n    text-align: center;\r\n`\r\n\r\nconst ButtonGroup = styled.div`\r\n    // to make buttons left and right we use flex\r\n    display: flex;\r\n    margin-bottom: 30px;\r\n    @media (max-width: 786px) {\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst LeftButton = styled.div`\r\n    background-color: rgba(23, 26, 32, 0.8);\r\n    height: 40px;\r\n    width: 256px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 100px;\r\n    opacity: 0.85;\r\n    text-transform: uppercase;\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n    margin: 8px;\r\n`\r\n\r\n// inheriting leftbutton properties \r\nconst RightButton = styled(LeftButton)`\r\n    color: black;\r\n    background-color: white;\r\n    opacity: 0.65;\r\n`\r\n\r\nconst DownArrow = styled.img`\r\n    // margin-top: 20px;\r\n    overflow-x: hidden;\r\n    height: 40px;\r\n    animation: animateDown infinite 1.5s;\r\n`\r\n\r\nconst Buttons = styled.div`\r\n\r\n`","import React from 'react'\r\nimport styled from \"styled-components\"\r\nimport Section from './Section'\r\n\r\nfunction Home() {\r\n    return (\r\n        <Container>\r\n            <Section \r\n                title = \"Model S\"\r\n                description = \"Order Online for Touchless Delivery\"\r\n                backgroundimage = \"model-s.jpg\"\r\n                leftButton = \"Custom Order\"\r\n                rightButton = \"Existing Inventory\"\r\n            />\r\n            <Section \r\n                title = \"Model Y\"\r\n                description = \"Order Online for Touchless Delivery\"\r\n                backgroundimage = \"model-y.jpg\"\r\n                leftButton = \"Custom Order\"\r\n                rightButton = \"Existing Inventory\"\r\n            />\r\n            <Section \r\n                title = \"Model 3\"\r\n                description = \"Order Online for Touchless Delivery\"\r\n                backgroundimage = \"model-3.jpg\"\r\n                leftButton = \"Custom Order\"\r\n                rightButton = \"Existing Inventory\"\r\n            />\r\n            <Section \r\n                title = \"Model X\"\r\n                description = \"Order Online for Touchless Delivery\"\r\n                backgroundimage = \"model-x.jpg\"\r\n                leftButton = \"Custom Order\"\r\n                rightButton = \"Existing Inventory\"\r\n            />\r\n            <Section\r\n                title = \"Solar Panel\"\r\n                description = \"Lowest Cost Solar Panels in America\"\r\n                backgroundimage = \"solar-panel.jpg\"\r\n                leftButton = \"Order Now\"\r\n                rightButton = \"Learn More\"\r\n            />\r\n            <Section \r\n                title = \"Solar Roof\"\r\n                description = \"Produces Clean Energy from your Roof\"\r\n                backgroundimage = \"solar-roof.jpg\"\r\n                leftButton = \"Order Now\"\r\n                rightButton = \"Learn More\"\r\n            />\r\n            <Section \r\n                title = \"Accessories\"\r\n                description = \"\"\r\n                backgroundimage = \"accessories.jpg\"\r\n                leftButton = \"Shop Now\"\r\n                rightButton = \"\"\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n// styled allow us to style div inside js rather than doing it in css file\r\nconst  Container = styled.div`\r\n    height: 100vh;\r\n`","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Home from './components/Home';\nimport carSlice from './features/car/carSlice';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport carReducer from \"../features/car/carSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    car: carReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}